use utf8;
$XMLHashRef = [
  undef,
  {
    'otrs_config' => [
      undef,
      {
        'ConfigItem' => [
          undef,
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The identifier for a ticket, e.g. Ticket#, Call#, MyTicket#. The default is Ticket#.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Hook',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Ticket#',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The divider between TicketHook and ticket number. E.g \': \'.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::HookDivider',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Max size of the subjects in an email reply.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SubjectSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The text at the beginning of the subject in an email reply, e.g. RE, AW, or AS.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SubjectRe',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Re',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The text at the beginning of the subject when an email is forwarded, e.g. FW, Fwd, or WG.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SubjectFwd',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Fwd',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The format of the subject. \'Left\' means \'[TicketHook#:12345] Some Subject\', \'Right\' means \'Some Subject [TicketHook#:12345]\', \'None\' means \'Some Subject\' and no ticket number. In the last case you should enable PostmasterFollowupSearchInRaw or PostmasterFollowUpSearchInReferences to recognize followups based on email headers and/or body.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SubjectFormat',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Left',
                        'Key' => 'Left'
                      },
                      {
                        'Content' => 'Right',
                        'Key' => 'Right'
                      },
                      {
                        'Content' => 'None',
                        'Key' => 'None'
                      }
                    ],
                    'SelectedID' => 'Left'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Name of custom queue. The custom queue is a queue selection of your preferred queues and can be selected in the preferences settings.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomQueue',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'My Queues',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Ignore article with system sender type for new article feature (e. g. auto responses or email notifications).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::NewArticleIgnoreSystemSender',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Changes the owner of tickets to everyone (useful for ASP). Normally only agent with rw permissions in the queue of the ticket will be shown.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ChangeOwnerToEveryone',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables ticket responsible feature, to keep track of a specific ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      },
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Automatically sets the owner of a ticket as the responsible for it (if ticket responsible feature is enabled).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ResponsibleAutoSet',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      },
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows defining new types for ticket (if ticket type feature is enabled).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Type',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows defining services and SLAs for tickets (e. g. email, desktop, network, ...), and escalation attributes for SLAs (if ticket service/SLA feature is enabled).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Service',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows default services to be selected also for non existing customers.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Service::Default::UnknownCustomer',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Activates the ticket archive system to have a faster system by moving some tickets out of the daily scope. To search for these tickets, the archive flag has to be enabled in the ticket search.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ArchiveSystem',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Controls if the ticket and article seen flags are removed when a ticket is archived.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ArchiveSystem::RemoveSeenFlags',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Removes the ticket watcher information when a ticket is archived.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ArchiveSystem::RemoveTicketWatchers',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Activates the ticket archive system search in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomerArchiveSystem',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      },
                      {
                        'Content' => 'Yes, but hide archived tickets',
                        'Key' => '2'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Selects the ticket number generator module. "AutoIncrement" increments the ticket number, the SystemID and the counter are used with SystemID.counter format (e.g. 1010138, 1010139). With "Date" the ticket numbers will be generated by the current date, the SystemID and the counter. The format looks like Year.Month.Day.SystemID.counter (e.g. 200206231010138, 200206231010139). With "DateChecksum"  the counter will be appended as checksum to the string of date and SystemID. The checksum will be rotated on a daily basis. The format looks like Year.Month.Day.SystemID.Counter.CheckSum (e.g. 2002070110101520, 2002070110101535). "Random" generates randomized ticket numbers in the format "SystemID.Random" (e.g. 100057866352, 103745394596).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::NumberGenerator',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '',
                    'Location' => 'Kernel/System/Ticket/Number/*.pm',
                    'SelectedID' => 'Kernel::System::Ticket::Number::DateChecksum'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the minimal ticket counter size (if "AutoIncrement" was selected as TicketNumberGenerator). Default is 5, this means the counter starts from 10000.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::NumberGenerator::MinCounterSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '5',
                    'Regex' => '^[0-9]$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Checks the SystemID in ticket number detection for follow-ups (use "No" if SystemID has been changed after using the system).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::NumberGenerator::CheckSystemID',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      },
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Log file for the ticket counter.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CounterLog',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '<OTRS_CONFIG_Home>/var/log/TicketCounter.log',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'IndexAccelerator: to choose your backend TicketViewAccelerator module. "RuntimeDB" generates each queue view on the fly from ticket table (no performance problems up to approx. 60.000 tickets in total and 6.000 open tickets in the system). "StaticDB" is the most powerful module, it uses an extra ticket-index table that works like a view (recommended if more than 80.000 and 6.000 open tickets are stored in the system). Use the script "bin/otrs.RebuildTicketIndex.pl" for initial index update.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::IndexModule',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
            ',
                    'Location' => 'Kernel/System/Ticket/IndexAccelerator/*.pm',
                    'SelectedID' => 'Kernel::System::Ticket::IndexAccelerator::RuntimeDB'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Saves the attachments of articles. "DB" stores all data in the database (not recommended for storing big attachments). "FS" stores the data on the filesystem; this is faster but the webserver should run under the OTRS user. You can switch between the modules even on a system that is already in production without any loss of data.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::StorageModule',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
            ',
                    'Location' => 'Kernel/System/Ticket/ArticleStorage*.pm',
                    'SelectedID' => 'Kernel::System::Ticket::ArticleStorageDB'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the directory to store the data in, if "FS" was selected for TicketStorageModule.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'ArticleDir',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '<OTRS_CONFIG_Home>/var/article',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Restores a ticket from the archive (only if the event is a state change, from closed to any open available state).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###100-ArchiveRestore',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ArchiveRestore',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketStateUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Updates the ticket index accelerator.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###110-AcceleratorUpdate',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TicketAcceleratorUpdate',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketStateUpdate|TicketQueueUpdate|TicketLockUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Resets and unlocks the owner of a ticket if it was moved to another queue.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###120-ForceOwnerResetOnMove',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ForceOwnerReset',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketQueueUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Forces to choose a different ticket state (from current) after lock action. Define the current state as key, and the next state after lock action as content.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###130-ForceStateChangeOnLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ForceState',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketLockUpdate',
                        'Key' => 'Event'
                      },
                      {
                        'Content' => 'open',
                        'Key' => 'new'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Automatically sets the responsible of a ticket (if it is not set yet) after the first owner update.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###140-ResponsibleAutoSet',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ResponsibleAutoSet',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketOwnerUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the PendingTime of a ticket to 0 if the state is changed to a non-pending state.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###150-TicketPendingTimeReset',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TicketPendingTimeReset',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketStateUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sends the notifications which are configured in the admin interface under "Notfication (Event)".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###500-NotificationEvent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::NotificationEvent',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Transaction'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Updates the ticket escalation index after a ticket attribute got updated.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###900-EscalationIndex',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TicketEscalationIndex',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketSLAUpdate|TicketQueueUpdate|TicketStateUpdate|TicketCreate|ArticleCreate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The duration in minutes after emitting an event, in which the new escalation notify and start events are suppressed.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'OTRSEscalationEvents::DecayTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '1440',
                    'Regex' => '^[0-9]+$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Ticket event module that triggers the escalation stop events.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###900-EscalationStopEvents',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TriggerEscalationStopEvents',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketSLAUpdate|TicketQueueUpdate|TicketStateUpdate|ArticleCreate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Forces to unlock tickets after being moved to another queue.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###910-ForceUnlockOnMove',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ForceUnlock',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'TicketQueueUpdate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Update Ticket "Seen" flag if every article got seen or a new Article got created.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###920-TicketArticleNewMessageUpdate',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TicketNewMessageUpdate',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'ArticleCreate|ArticleFlagSet',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Overloads (redefines) existing functions in Kernel::System::Ticket. Used to easily add customizations.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomModule###001-CustomModule',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::System::Ticket::Custom',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '0'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Helps to extend your articles full-text search (From, To, Cc, Subject and Body search). Runtime will do full-text searches on live data (it works fine for up to 50.000 tickets). StaticDB will strip all articles and will build an index after article creation, increasing fulltext searches about 50%. To create an initial index use "bin/otrs.RebuildFulltextIndex.pl".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SearchIndexModule',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
            ',
                    'Location' => 'Kernel/System/Ticket/ArticleSearchIndex/*.pm',
                    'SelectedID' => 'Kernel::System::Ticket::ArticleSearchIndex::RuntimeDB'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::FulltextSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Basic fulltext index settings. Execute "bin/otrs.RebuildFulltextIndex.pl" in order to generate a new index.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SearchIndex::Attribute',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1000',
                        'Key' => 'WordCountMax'
                      },
                      {
                        'Content' => '3',
                        'Key' => 'WordLengthMin'
                      },
                      {
                        'Content' => '30',
                        'Key' => 'WordLengthMax'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::FulltextSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Fulltext index regex filters to remove parts of the text.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SearchIndex::Filters',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '[,\\&\\<\\>\\?"\\!\\*\\|;\\[\\]\\(\\)\\+\\$\\^=]'
                      },
                      {
                        'Content' => '^[\':.]|[\':.]$'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::FulltextSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Stop words for fulltext index. These words will be removed.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::SearchIndex::StopWords',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'der'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'die'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'das'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'und'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'in'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'vom'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'zu'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'im'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'den'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'auf'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'als'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'the'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'of'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'and'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'in'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'to'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'a'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'is'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'for'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::FulltextSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Builds an article index right after the article\'s creation.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###98-ArticleSearchIndex',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::ArticleSearchIndex',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '(ArticleCreate|ArticleUpdate)',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::FulltextSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows having a small format ticket overview (CustomerInfo => 1 - shows also the customer information).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Overview###Small',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketOverviewSmall',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Small',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'S',
                        'Key' => 'NameShort'
                      },
                      {
                        'Content' => '100',
                        'Key' => 'ModulePriority'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'CustomerInfo'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows either the last customer article\'s subject or the ticket title in the small format overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::OverviewSmall###ColumnHeader',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'LastCustomerSubject',
                        'Key' => 'LastCustomerSubject'
                      },
                      {
                        'Content' => 'TicketTitle',
                        'Key' => 'TicketTitle'
                      }
                    ],
                    'SelectedID' => 'LastCustomerSubject'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows having a medium format ticket overview (CustomerInfo => 1 - shows also the customer information).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Overview###Medium',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketOverviewMedium',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Medium',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'M',
                        'Key' => 'NameShort'
                      },
                      {
                        'Content' => '200',
                        'Key' => 'ModulePriority'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'CustomerInfo'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'TicketActionsPerTicket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a preview of the ticket overview (CustomerInfo => 1 - shows also Customer-Info, CustomerInfoMaxSize max. size in characters of Customer-Info).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Overview###Preview',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketOverviewPreview',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Preview',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'L',
                        'Key' => 'NameShort'
                      },
                      {
                        'Content' => '300',
                        'Key' => 'ModulePriority'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'CustomerInfo'
                      },
                      {
                        'Content' => '18',
                        'Key' => 'CustomerInfoMaxSize'
                      },
                      {
                        'Content' => '25',
                        'Key' => 'DefaultPreViewLines'
                      },
                      {
                        'Content' => '90',
                        'Key' => 'DefaultViewNewLine'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'StripEmptyLines'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'TicketActionsPerTicket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines which article sender types should be shown in the preview of a ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Overview::PreviewArticleSenderTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'agent'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'system'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'customer'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines wich article type should be expanded when entering the overview. If nothing defined, latest article will be expanded.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Overview::PreviewArticleTypeExpanded',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables or disables the autocomplete feature for the customer search in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerSearchAutoComplete###Active',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::CustomerSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the minimum number of characters before autocomplete query is sent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerSearchAutoComplete###MinQueryLength',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '2',
                    'Regex' => '^[0-9]$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::CustomerSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Delay time between autocomplete queries in milliseconds.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerSearchAutoComplete###QueryDelay',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^[0-9]+$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::CustomerSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the number of search results to be displayed for the autocomplete feature.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerSearchAutoComplete###MaxResultsDisplayed',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '20'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::CustomerSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines if the search results container for the autocomplete feature should adjust its width dynamically.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerSearchAutoComplete::DynamicWidth',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::CustomerSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Time in seconds that gets added to the actual time if setting a pending-state (default: 86400 = 1 day).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PendingDiffTime',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '86400',
                    'Regex' => '^[0-9]{1,6}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Define the max depth of queues.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MaxQueueLevel',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '5'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows existing parent/child queue lists in the system in the form of a tree or a list.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ListType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'tree',
                        'Key' => 'tree'
                      },
                      {
                        'Content' => 'list',
                        'Key' => 'list'
                      }
                    ],
                    'SelectedID' => 'tree'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables or disables the ticket watcher feature, to keep track of tickets without being the owner nor the responsible.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Watcher',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketWatcher'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables ticket watcher feature only for the listed groups.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::WatcherGroup',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'admin'
                      },
                      {
                        'Content' => 'users'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketWatcher'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables ticket bulk action feature for the agent frontend to work on more than one ticket at a time.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::BulkFeature',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketBulkAction'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Enables ticket bulk action feature only for the listed groups.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::BulkFeatureGroup',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'admin'
                      },
                      {
                        'Content' => 'users'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketBulkAction'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link to see a zoomed email ticket in plain text.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PlainView',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows all the articles of the ticket (expanded) in the zoom view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ZoomExpand',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the articles sorted normally or in reverse, under ticket zoom in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ZoomExpandSort',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'reverse',
                        'Key' => 'reverse'
                      },
                      {
                        'Content' => 'normal',
                        'Key' => 'normal'
                      }
                    ],
                    'SelectedID' => 'normal'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a count of icons in the ticket zoom, if the article has attachments.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ZoomAttachmentDisplayCount',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '01',
                        'Key' => '1'
                      },
                      {
                        'Content' => '02',
                        'Key' => '2'
                      },
                      {
                        'Content' => '03',
                        'Key' => '3'
                      },
                      {
                        'Content' => '04',
                        'Key' => '4'
                      },
                      {
                        'Content' => '05',
                        'Key' => '5'
                      },
                      {
                        'Content' => '06',
                        'Key' => '6'
                      },
                      {
                        'Content' => '07',
                        'Key' => '7'
                      },
                      {
                        'Content' => '08',
                        'Key' => '8'
                      },
                      {
                        'Content' => '09',
                        'Key' => '9'
                      },
                      {
                        'Content' => '10',
                        'Key' => '10'
                      },
                      {
                        'Content' => '11',
                        'Key' => '11'
                      },
                      {
                        'Content' => '12',
                        'Key' => '12'
                      },
                      {
                        'Content' => '13',
                        'Key' => '13'
                      },
                      {
                        'Content' => '14',
                        'Key' => '14'
                      },
                      {
                        'Content' => '15',
                        'Key' => '15'
                      },
                      {
                        'Content' => '16',
                        'Key' => '16'
                      },
                      {
                        'Content' => '17',
                        'Key' => '17'
                      },
                      {
                        'Content' => '18',
                        'Key' => '18'
                      },
                      {
                        'Content' => '19',
                        'Key' => '19'
                      },
                      {
                        'Content' => '20',
                        'Key' => '20'
                      },
                      {
                        'Content' => '21',
                        'Key' => '21'
                      },
                      {
                        'Content' => '22',
                        'Key' => '22'
                      },
                      {
                        'Content' => '23',
                        'Key' => '23'
                      },
                      {
                        'Content' => '24',
                        'Key' => '24'
                      },
                      {
                        'Content' => '25',
                        'Key' => '25'
                      }
                    ],
                    'SelectedID' => '20'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Displays the accounted time for an article in the ticket zoom view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ZoomTimeDisplay',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows colors for different article types in the article table.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::UseArticleColors',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Activates the article filter in the zoom view to specify which articles should be shown.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::TicketArticleFilter',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket history (reverse ordered) in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::HistoryOrder',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'reverse',
                        'Key' => 'reverse'
                      },
                      {
                        'Content' => 'normal',
                        'Key' => 'normal'
                      }
                    ],
                    'SelectedID' => 'normal'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewHistory'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Permitted width for compose email windows.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::TextAreaEmail',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '82',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Permitted width for compose note windows.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::TextAreaNote',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '78',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Max size (in rows) of the informed agents box in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::InformAgentMaxSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '03',
                        'Key' => '3'
                      },
                      {
                        'Content' => '05',
                        'Key' => '5'
                      },
                      {
                        'Content' => '10',
                        'Key' => '10'
                      },
                      {
                        'Content' => '15',
                        'Key' => '15'
                      },
                      {
                        'Content' => '20',
                        'Key' => '20'
                      },
                      {
                        'Content' => '25',
                        'Key' => '25'
                      },
                      {
                        'Content' => '30',
                        'Key' => '30'
                      }
                    ],
                    'SelectedID' => '3'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Max size (in rows) of the involved agents box in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::InvolvedAgentMaxSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '03',
                        'Key' => '3'
                      },
                      {
                        'Content' => '05',
                        'Key' => '5'
                      },
                      {
                        'Content' => '10',
                        'Key' => '10'
                      },
                      {
                        'Content' => '15',
                        'Key' => '15'
                      },
                      {
                        'Content' => '20',
                        'Key' => '20'
                      },
                      {
                        'Content' => '25',
                        'Key' => '25'
                      },
                      {
                        'Content' => '30',
                        'Key' => '30'
                      }
                    ],
                    'SelectedID' => '3'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the customer user information (phone and email) in the compose screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerInfoCompose',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Max size (in characters) of the customer information table (phone and email) in the compose screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerInfoComposeMaxSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '22',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the customer user\'s info in the ticket zoom view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerInfoZoom',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Maximum size (in characters) of the customer information table in the ticket zoom view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerInfoZoomMaxSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '22',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Controls if customers have the ability to sort their tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverviewSortable',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => ''
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => 'Sortable'
                      }
                    ],
                    'SelectedID' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Custom text for the page shown to customers that have no tickets yet.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverviewCustomEmptyText',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Welcome!',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'Please click the button below to create your first ticket.',
                        'Key' => 'Text'
                      },
                      {
                        'Content' => 'Create your first ticket',
                        'Key' => 'Button'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows either the last customer article\'s subject or the ticket title in the small format overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverview###ColumnHeader',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'LastCustomerSubject',
                        'Key' => 'LastCustomerSubject'
                      },
                      {
                        'Content' => 'TicketTitle',
                        'Key' => 'TicketTitle'
                      }
                    ],
                    'SelectedID' => 'TicketTitle'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Show the current owner in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverview###Owner',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Show the current queue in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverview###Queue',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket overview screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketOverview###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Strips empty lines on the ticket preview in the queue view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###StripEmptyLines',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows all both ro and rw queues in the queue view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###ViewAllPossibleTickets',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the age in minutes (first level) for highlighting queues that contain untouched tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###HighlightAge1',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '1440',
                    'Regex' => '^[0-9]{1,7}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the age in minutes (second level) for highlighting queues that contain untouched tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###HighlightAge2',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '2880',
                    'Regex' => '^[0-9]{1,7}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Activates a blinking mechanism of the queue that contains the oldest ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###Blink',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sorts the tickets (ascendingly or descendingly) when a single queue is selected in the queue view and after the tickets are sorted by priority. Values: 0 = ascending (oldest on top, default), 1 = descending (youngest on top). Use the QueueID for the key and 0 or 1 for value.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###QueueSort',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => '7'
                      },
                      {
                        'Content' => '0',
                        'Key' => '3'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default sort criteria for all queues displayed in the queue view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'TicketEscalation',
                        'Key' => 'TicketEscalation'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a pre-sorting by priority should be done in the queue view.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###PreSort::ByPriority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default sort order for all queues in the queue view, after priority sort.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketQueue###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Up'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewQueue'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Activates time accounting.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AccountTime',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the prefered time units (e.g. work units, hours, minutes).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::TimeUnits',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ' (work units)',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if time accounting is mandatory in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NeedAccountedTime',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if time accounting must be set to all tickets in bulk action.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::BulkAccountedTime',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if composed messages have to be spell checked in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NeedSpellCheck',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows all open tickets (even if they are locked) in the status view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketStatusView###ViewableTicketsPage',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '50',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewStatus'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in the status view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketStatusView###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'TicketEscalation',
                        'Key' => 'TicketEscalation'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewStatus'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order (after priority sort) in the status view of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketStatusView###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Down'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewStatus'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the required permission to show a ticket in the escalation view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEscalationView###TicketPermission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'RW',
                        'Key' => 'rw'
                      },
                      {
                        'Content' => 'RO',
                        'Key' => 'ro'
                      }
                    ],
                    'SelectedID' => 'rw'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEscalation'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows all open tickets (even if they are locked) in the escalation view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEscalationView###ViewableTicketsPage',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '50',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEscalation'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in the escalation view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEscalationView###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'EscalationTime'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEscalation'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order (after priority sort) in the escalation view of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEscalationView###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Up'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEscalation'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows extended search conditions in ticket search of the agent interface. With this feature you can search e. g. with this kind of conditions like "(key1&&key2)" or "(key1||key2)".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###ExtendedSearchCondition',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Maximum number of tickets to be displayed in the result of a search in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchLimit',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '2000',
                    'Regex' => '^[0-9]{1,8}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Number of tickets to be displayed in each page of a search result in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchPageShown',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '40',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Number of lines (per ticket) that are shown by the search utility in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchViewableTicketLines',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '10',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting of the ticket search result of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order in the ticket search result of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Down'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Exports the whole article tree in search result (it can affect the system performance).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchArticleCSVTree',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Data used to export the search result in CSV format.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchCSVData',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'TicketNumber',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Age',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Created',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Closed',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'FirstLock',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'FirstResponse',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'State',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Priority',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Queue',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Lock',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Owner',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'UserFirstname',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'UserLastname',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'CustomerID',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'CustomerName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'From',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Subject',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AccountedTime',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'ArticleTree',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'SolutionInMin',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'SolutionDiffInMin',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'FirstResponseInMin',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'FirstResponseDiffInMin',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Includes article create times in the ticket search of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###ArticleCreateTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###Fulltext',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketNumber',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###From',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###To',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###Cc',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###CustomerID',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###CustomerUserLogin',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###StateIDs',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###QueueIDs',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default data to use on attribute for ticket search screen. Example: "TicketCreateTimePointFormat=year;TicketCreateTimePointStart=Last;TicketCreateTimePoint=2;".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketCreateTimePoint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default data to use on attribute for ticket search screen. Example: "TicketCreateTimeStartYear=2010;TicketCreateTimeStartMonth=10;TicketCreateTimeStartDay=4;TicketCreateTimeStopYear=2010;TicketCreateTimeStopMonth=11;TicketCreateTimeStopDay=3;".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketCreateTimeSlot',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketChangeTimePoint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketChangeTimeSlot',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketCloseTimePoint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketCloseTimeSlot',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketEscalationTimePoint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###TicketEscalationTimeSlot',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###ArticleCreateTimePoint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###ArticleCreateTimeSlot',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###SearchInArchive',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Search backend router.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Search###Ticket',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Action=AgentTicketSearch;Subaction=AJAX',
                        'Key' => '^AgentTicket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::SearchRouter'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in the locked ticket view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketLockedView###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order in the ticket locked view of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketLockedView###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Up'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in the responsible view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsibleView###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order in the responsible view of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsibleView###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Up'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in the watch view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketWatchView###SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order in the watch view of the agent interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketWatchView###Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Up'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMailbox'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket free text screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'rw',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket free text screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket free text screen of the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket free text screen of the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket free text screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of a ticket in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default subject of a note in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Note"}',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default body of a note in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket free text screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket free text screen action, which gets used for ticket history.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket free text screen action, which gets used for ticket history.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%FreeText',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket phone outbound screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'phone',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket phone outbound screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'phone',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default sender type for phone tickets in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'agent',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default subject for phone tickets in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###Subject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Phone call"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default note body text for phone tickets in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###Body',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket next state after adding a phone note in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'closed successful',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Next possible ticket states after adding a phone note in the ticket phone outbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending auto'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket phone outbound screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'PhoneCallAgent',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket phone outbound screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket phone inbound screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'phone',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket phone inbound screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'phone',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default sender type for phone tickets in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'customer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default subject for phone tickets in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###Subject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Phone call"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default note body text for phone tickets in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###Body',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket next state after adding a phone note in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Next possible ticket states after adding a phone note in the ticket phone inbound screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending auto'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket phone inbound screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'PhoneCallCustomer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket phone inbound screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows an owner selection in phone and email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NewOwnerSelection',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Show a responsible selection in phone and email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NewResponsibleSelection',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the receipent target of the phone ticket and the sender of the email ticket ("Queue" shows all queues, "SystemAddress" displays all system addresses) in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NewQueueSelectionType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'SystemAddress',
                        'Key' => 'SystemAddress'
                      }
                    ],
                    'SelectedID' => 'Queue'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the strings that will be shown as receipent (To:) of the phone ticket and as sender (From:) of the email ticket in the agent interface. For Queue as NewQueueSelectionType "<Queue>" shows the names of the queues and for SystemAddress "<Realname> <<Email>>" shows the name and email of the receipent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NewQueueSelectionString',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '<Queue>',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines which options will be valid of the recepient (phone ticket) and the sender (email ticket) in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::NewQueueOwnSelection',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'First Queue!',
                        'Key' => '1'
                      },
                      {
                        'Content' => 'Second Queue!',
                        'Key' => '2'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows customer history tickets in AgentTicketPhone, AgentTicketEmail and AgentTicketCustomer.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ShowCustomerTickets',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If enabled, TicketPhone and TicketEmail will be open in new windows.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'NewTicketInNewWindow::Enabled',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default priority for new phone tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###Priority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default article type for new phone tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'phone',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default sender type for new phone ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'customer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Controls if more than one from entry can be set in the new phone ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone::AllowMultipleFrom',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for new phone tickets (e.g. \'Phone call\') in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###Subject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default note text for new telephone tickets. E.g \'New ticket via call\' in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###Body',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default next state for new phone tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###StateDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the next possible ticket states, after the creation of a new phone ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending auto'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the phone ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'PhoneCallCustomer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the phone ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default link type of splitted tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###SplitLinkType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'ParentChild',
                        'Key' => 'LinkType'
                      },
                      {
                        'Content' => 'Target',
                        'Key' => 'Direction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default priority for new email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###Priority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default article type for new email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'email-external',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default sender type for new email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'agent',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for new email tickets (e.g. \'email Outbound\') in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###Subject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default text for new email tickets in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###Body',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default next ticket state, after the creation of an email ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###StateDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the next possible ticket states, after the creation of a new email ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending auto'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the email ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'EmailAgent',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the email ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the close ticket screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'close',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the close ticket screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the close ticket screen of the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the close ticket screen of the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket close screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of a ticket in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'closed successful',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Close"}',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the close ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the close ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the close ticket screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Close',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket note screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket note screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket note screen of the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket note screen of the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket note screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of a ticket in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Note"}',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket note screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket note screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket note screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Note',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'owner',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket owner screen of a zoomed ticket in the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket owner screen of a zoomed ticket in the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket owner screen of a zoomed ticket in the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of the ticket in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Owner Update"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket owner screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket owner screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket owner screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Owner',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'pending',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket pending screen of a zoomed ticket in the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket pending screen of a zoomed ticket in the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket pending screen of a zoomed ticket in the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of the ticket in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'pending reminder',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Pending"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket pending screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket pending screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket pending screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Pending',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'priority',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket priority screen of a zoomed ticket in the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket priority screen of a zoomed ticket in the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket priority screen of a zoomed ticket in the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of the ticket in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Priority Update"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket priority screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket priority screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket priority screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Priority',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket responsible screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'responsible',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket responsible screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket responsible screen of the agent interface (Ticket::Type needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the service in the ticket responsible screen of the agent interface (Ticket::Service needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Service',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the queue in the ticket responsible screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Queue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets if ticket owner must be selected by the agent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###OwnerMandatory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of a ticket in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows adding notes in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Responsible Update"}!',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the involved agents on this ticket, in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###InvolvedAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a list of all the possible agents (all agents with note permissions on the queue/ticket) to determine who should be informed about this note, in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###InformAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the available note types for this ticket mask. If the option is deselected, ArticleTypeDefault is used and the option is removed from the mask.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the title fields in the ticket responsible screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###Title',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket responsible screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###HistoryType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AddNote',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket responsible screen action, which gets used for ticket history in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###HistoryComment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '%%Responsible',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Automatically lock and set owner to current Agent after selecting for an Bulk Action.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket type in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###TicketType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the ticket owner in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the responsible agent of the ticket in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If a note is added by an agent, sets the state of a ticket in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after adding a note, in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after adding a note, in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket priority in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###PriorityDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket bulk screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'note-internal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the different note types that will be used in the system.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBulk###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'note-internal'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'note-external'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'note-report'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBulk'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines if the list of possible queues to move to ticket into should be displayed in a dropdown list or in a new window in the agent interface. If "New Window" is set you can add a move note to the ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MoveType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'New Window',
                        'Key' => 'link'
                      },
                      {
                        'Content' => 'Dropdown',
                        'Key' => 'form'
                      }
                    ],
                    'SelectedID' => 'form'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows to set a new ticket state in the move ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###State',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after being moved to another queue, in the move ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::DefaultNextMoveStateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the ticket priority options in the move ticket screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket bounce screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBounce###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'bounce',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBounce'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket bounce screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBounce###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBounce'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after being bounced, in the ticket bounce screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBounce###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'closed successful',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBounce'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next state of a ticket after being bounced, in the ticket bounce screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketBounce###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBounce'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket bounced notification for customer/sender in the ticket bounce screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::BounceText',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => 'Your email with ticket number "<OTRS_TICKET>" is bounced to "<OTRS_BOUNCE_TO>". Contact this address for further information.'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewBounce'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket compose screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'compose',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket compose screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket if it is composed / answered in the ticket compose screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next possible states after composing / answering a ticket in the ticket compose screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      },
                      {
                        'Content' => 'pending auto'
                      },
                      {
                        'Content' => 'pending reminder'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the different article types that will be used in the system.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'email-external'
                      },
                      {
                        'Content' => 'email-internal'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the format of responses in the ticket compose screen of the agent interface ($QData{"OrigFrom"} is From 1:1, $QData{"OrigFromName"} is only realname of From).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ResponseFormat',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => '$QData{"Salutation"}
$QData{"StdResponse"}
$QData{"Signature"}

$TimeShort{"$QData{"Created"}"} - $QData{"OrigFromName"} $Text{"wrote"}:
$QData{"Body"}
'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the used character for email quotes in the ticket compose screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::Quote',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '>',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Adds customers email addresses to recipients in the ticket compose screen of the agent interface. The customers email address won\'t be added if the article type is email-internal.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ComposeAddCustomerAddress',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Replaces the original sender with current customer\'s email address on compose answer in the ticket compose screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ComposeReplaceSenderAddress',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Uses Cc recipients in reply Cc list on compose an email answer in the ticket compose screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ComposeExcludeCcRecipients',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket forward screen in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'forward',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket forward screen of the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state of a ticket after being forwarded, in the ticket forward screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###StateDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'closed successful',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next possible states after forwarding a ticket in the ticket forward screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###StateType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of forwarded message in the ticket forward screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###ArticleTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'email-external',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies the different article types that will be used in the system.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###ArticleTypes',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'email-external'
                      },
                      {
                        'Content' => 'email-internal'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to use the ticket merge screen of a zoomed ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMerge###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'rw',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required in the ticket merge screen of a zoomed ticket in the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMerge###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Required permissions to change the customer of a ticket in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCustomer###Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'customer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCustomer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines if a ticket lock is required to change the customer of a ticket in the agent interface (if the ticket isn\'t locked yet, the ticket gets locked and the current agent will be set automatically as its owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCustomer###RequiredLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCustomer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'When tickets are merged, the customer can be informed per email by setting the check box "Inform Sender". In this text area, you can define a pre-formatted text which can later be modified by the agents.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MergeText',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => 'Your email with ticket number "<OTRS_TICKET>" is merged to "<OTRS_MERGE_TO_TICKET>".'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'When tickets are merged, a note will be added automatically to the ticket which is no longer active. In this text area you can define this text (This text cannot be changed by the agent).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AutomaticMergeText',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => 'Merged Ticket <OTRS_TICKET> to <OTRS_MERGE_TO_TICKET>.'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default viewable sender types of a ticket (default: customer).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ViewableSenderTypes',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '\'customer\''
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the viewable locks of a ticket. Default: unlock, tmp_lock.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ViewableLocks',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '\'unlock\''
                      },
                      {
                        'Content' => '\'tmp_lock\''
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the valid state types for a ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::ViewableStateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'new'
                      },
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'pending reminder'
                      },
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the valid states for unlocked tickets. To unlock tickets the script "bin/otrs.UnlockTickets.pl" can be used.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::UnlockStateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'new'
                      },
                      {
                        'Content' => 'open'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sends reminder notifications of unlocked ticket after reaching the reminder date (only sent to ticket owner).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::PendingNotificationOnlyToOwner',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Disables sending reminder notifications to the responsible agent of a ticket (Ticket::Responsible needs to be activated).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::PendingNotificationNotToResponsible',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the state type of the reminder for pending tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::PendingReminderStateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'pending reminder'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the possible states for pending tickets that changed state after reaching time limit.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::PendingAutoStateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'pending auto'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines which states should be set automatically (Content), after the pending time of state (Key) has been reached.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::StateAfterPending',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'closed successful',
                        'Key' => 'pending auto close+'
                      },
                      {
                        'Content' => 'closed unsuccessful',
                        'Key' => 'pending auto close-'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines an external link to the database of the customer (e.g. \'http://yourhost/customer.php?CID=$Data{"CustomerID"}\' or \'\').',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerDBLink',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Env{"CGIHandle"}?Action=AgentCustomerInformationCenter;CustomerID=$QData{"CustomerID"}',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the target attribute in the link to external customer database. E.g. \'target="cdb"\'.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerDBLinkTarget',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the target attribute in the link to external customer database. E.g. \'AsPopup PopupType_TicketAction\'.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerDBLinkClass',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Toolbar Item for a shortcut.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###1-Ticket::AgentTicketQueue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarLink',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Queue view',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Action=AgentTicketQueue',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'AgentTicketQueue',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'q',
                        'Key' => 'AccessKey'
                      },
                      {
                        'Content' => 'QueueView',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => '1010010',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Toolbar Item for a shortcut.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###2-Ticket::AgentTicketStatus',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarLink',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Status view',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Action=AgentTicketStatusView',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'AgentTicketStatusView',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'o',
                        'Key' => 'AccessKey'
                      },
                      {
                        'Content' => 'StatusView',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => '1010020',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Toolbar Item for a shortcut.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###3-Ticket::AgentTicketEscalation',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarLink',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Escalation view',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Action=AgentTicketEscalationView',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'AgentTicketEscalationView',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'w',
                        'Key' => 'AccessKey'
                      },
                      {
                        'Content' => 'EscalationView',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => '1010030',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Toolbar Item for a shortcut.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###4-Ticket::AgentTicketPhone',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarLink',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'New phone ticket',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Action=AgentTicketPhone',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'AgentTicketPhone',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'l',
                        'Key' => 'AccessKey'
                      },
                      {
                        'Content' => 'PhoneTicket',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => '1020010',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Toolbar Item for a shortcut.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###5-Ticket::AgentTicketEmail',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarLink',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'New email ticket',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Action=AgentTicketEmail',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'AgentTicketEmail',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'l',
                        'Key' => 'AccessKey'
                      },
                      {
                        'Content' => 'EmailTicket',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => '1020020',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface notification module to see the number of tickets an agent is responsible for.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###6-Ticket::TicketResponsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarTicketResponsible',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Responsible',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => 'Responsible New',
                        'Key' => 'CssClassNew'
                      },
                      {
                        'Content' => 'Responsible Reached',
                        'Key' => 'CssClassReached'
                      },
                      {
                        'Content' => '1030010',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface notification module to see the number of watched tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###7-Ticket::TicketWatcher',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarTicketWatcher',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Watcher',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => 'Watcher New',
                        'Key' => 'CssClassNew'
                      },
                      {
                        'Content' => 'Watcher Reached',
                        'Key' => 'CssClassReached'
                      },
                      {
                        'Content' => '1030020',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface notification module to check the used charset.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###8-Ticket::TicketLocked',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarTicketLocked',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Locked',
                        'Key' => 'CssClass'
                      },
                      {
                        'Content' => 'Locked New',
                        'Key' => 'CssClassNew'
                      },
                      {
                        'Content' => 'Locked Reached',
                        'Key' => 'CssClassReached'
                      },
                      {
                        'Content' => '1030030',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface module to access search profiles via nav bar.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###9-Ticket::TicketSearchProfile',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarTicketSearchProfile',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Search-Template',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'Search-Template',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'ToolBarSearchProfile',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '40',
                        'Key' => 'MaxWidth'
                      },
                      {
                        'Content' => '1990010',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface module to access fulltext search via nav bar.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###10-Ticket::TicketSearchFulltext',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Fulltext-Search',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'Fulltext-Search',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'ToolBarSearchFulltext',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Size'
                      },
                      {
                        'Content' => 'Core.Agent.Toolbar.FulltextSearch.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => '1990020',
                        'Key' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface module to access CIC search via nav bar.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###11-CICSearchCustomerID',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'CIC search for CustomerID',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'CostomerID search',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'ToolBarCICSearchCustomerID',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Size'
                      },
                      {
                        'Content' => 'Core.Agent.Toolbar.CICSearch.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => '1990030',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '2',
                                'Key' => 'MinQueryLength'
                              },
                              {
                                'Content' => '100',
                                'Key' => 'QueryDelay'
                              },
                              {
                                'Content' => '20',
                                'Key' => 'MaxResultsDisplayed'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface module to access CIC search via nav bar.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::ToolBarModule###11-CICSearchCustomerUser',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ToolBarGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'CIC search for CustomerUser',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'Costomer user search',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'ToolBarCICSearchCustomerUser',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Size'
                      },
                      {
                        'Content' => 'Core.Agent.Toolbar.CICSearch.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => '1990040',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '2',
                                'Key' => 'MinQueryLength'
                              },
                              {
                                'Content' => '100',
                                'Key' => 'QueryDelay'
                              },
                              {
                                'Content' => '20',
                                'Key' => 'MaxResultsDisplayed'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ToolBarModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to generate html OpenSearch profile for short ticket search in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::HeaderMetaModule###2-TicketSearch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::HeaderMetaTicketSearch',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AgentTicketSearch',
                        'Key' => 'Action'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleMetaHead'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to show notifications and escalations (ShownMax: max. shown escalations, EscalationInMinutes: Show ticket which will escalation in, CacheTime: Cache of calculated escalations in seconds).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::NotifyModule###5-Ticket::TicketEscalation',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::NotificationAgentTicketEscalation',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '25',
                        'Key' => 'ShownMax'
                      },
                      {
                        'Content' => '120',
                        'Key' => 'EscalationInMinutes'
                      },
                      {
                        'Content' => '40',
                        'Key' => 'CacheTime'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleNotify'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Customer item (icon) which shows the open tickets of this customer as info block. Setting CustomerUserLogin to 1 searches for tickets based on login name rather than CustomerID.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CustomerUser::Item###15-OpenTickets',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
                ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                    ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::CustomerUserGenericTicket',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'StateType=Open;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'CustomerUserLogin'
                      },
                      {
                        'Content' => 'Core.Agent.CustomerUser.OpenTicket.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => 'OpenTicket',
                        'Key' => 'CSSClassOpenTicket'
                      },
                      {
                        'Content' => 'NoOpenTicket',
                        'Key' => 'CSSClassNoOpenTicket'
                      },
                      {
                        'Content' => '_blank',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'Open tickets',
                        'Key' => 'Text',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketSearch',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Search',
                        'Key' => 'Subaction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Customer item (icon) which shows the open tickets of this customer as info block. Setting CustomerUserLogin to 1 searches for tickets based on login name rather than CustomerID.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CustomerUser::Item###16-OpenTicketsForCustomerUserLogin',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
                ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                    ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::CustomerUserGenericTicket',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'StateType=Open;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'CustomerUserLogin'
                      },
                      {
                        'Content' => 'Core.Agent.CustomerUser.OpenTicket.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => 'OpenTicket',
                        'Key' => 'CSSClassOpenTicket'
                      },
                      {
                        'Content' => 'NoOpenTicket',
                        'Key' => 'CSSClassNoOpenTicket'
                      },
                      {
                        'Content' => '_blank',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'Open tickets of customer',
                        'Key' => 'Text',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketSearch',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Search',
                        'Key' => 'Subaction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Customer item (icon) which shows the closed tickets of this customer as info block. Setting CustomerUserLogin to 1 searches for tickets based on login name rather than CustomerID.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CustomerUser::Item###17-ClosedTickets',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
                ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                    ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::CustomerUserGenericTicket',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'StateType=Closed;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'CustomerUserLogin'
                      },
                      {
                        'Content' => 'Core.Agent.CustomerUser.OpenTicket.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => 'OpenTicket',
                        'Key' => 'CSSClassOpenTicket'
                      },
                      {
                        'Content' => 'NoOpenTicket',
                        'Key' => 'CSSClassNoOpenTicket'
                      },
                      {
                        'Content' => '_blank',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'Closed tickets',
                        'Key' => 'Text',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketSearch',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Search',
                        'Key' => 'Subaction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Customer item (icon) which shows the closed tickets of this customer as info block. Setting CustomerUserLogin to 1 searches for tickets based on login name rather than CustomerID.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CustomerUser::Item###18-ClosedTicketsForCustomerUserLogin',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
                ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                    ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::CustomerUserGenericTicket',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'StateType=Closed;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'CustomerUserLogin'
                      },
                      {
                        'Content' => 'Core.Agent.CustomerUser.OpenTicket.css',
                        'Key' => 'CSS'
                      },
                      {
                        'Content' => 'OpenTicket',
                        'Key' => 'CSSClassOpenTicket'
                      },
                      {
                        'Content' => 'NoOpenTicket',
                        'Key' => 'CSSClassNoOpenTicket'
                      },
                      {
                        'Content' => '_blank',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'Closed tickets of customer',
                        'Key' => 'Text',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketSearch',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Search',
                        'Key' => 'Subaction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface article notification module to check PGP.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleViewModule###1-PGP',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleCheckPGP',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleViewModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface module to check incoming emails in the Ticket-Zoom-View if the S/MIME-key is available and true.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleViewModule###1-SMIME',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleCheckSMIME',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleViewModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface article notification module to check PGP.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticlePreViewModule###1-PGP',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleCheckPGP',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleViewModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Agent interface article notification module to check S/MIME.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticlePreViewModule###1-SMIME',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleCheckSMIME',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleViewModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to compose signed messages (PGP or S/MIME).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleComposeModule###1-SignEmail',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleComposeSign',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleComposeModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to crypt composed messages (PGP or S/MIME).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleComposeModule###2-CryptEmail',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleComposeCrypt',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleComposeModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link to download article attachments in the zoom view of the article in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleAttachmentModule###1-Download',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleAttachmentDownload',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleAttachmentModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link to access article attachments via a html online viewer in the zoom view of the article in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ArticleAttachmentModule###2-HTML-Viewer',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ArticleAttachmentHTMLViewer',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ArticleAttachmentModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to go back in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###000-Back',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Back',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Back',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => '$Env{"LastScreenOverview"};TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to lock/unlock tickets in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###100-Lock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuLock',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Lock',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketLock',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to access the history of a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###200-History',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'History',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Show the ticket history',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketHistory',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketHistory;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketHistory',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to print a ticket or an article in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###210-Print',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Print',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Print this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketPrint',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketPrint;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => 'target="print"',
                        'Key' => 'LinkParam'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to see the priority of a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###300-Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Change the ticket priority',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketPriority',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketPriority;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to add a free text field in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###310-FreeText',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Free Fields',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Change the free fields for this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketFreeText',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketFreeText;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu that allows linking a ticket with another object in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###320-Link',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Link',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Link this ticket to other objects',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentLinkObject',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentLinkObject;SourceObject=Ticket;SourceKey=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to see the owner of a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###400-Owner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Owner',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Change the owner for this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketOwner',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketOwner;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to see the responsible agent of a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###410-Responsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuResponsible',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Responsible',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Change the responsible person for this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketResponsible',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketResponsible;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to see the customer who requested the ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###420-Customer',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Customer',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Change the customer for this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketCustomer',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketCustomer;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to add a note in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###420-Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Note',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Add a note to this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketNote',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketNote;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to add a note in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###425-Phone Call Outbound',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Phone Call Outbound',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Phone Call Outbound',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketPhoneOutbound',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketPhoneOutbound;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to add a note in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###426-Phone Call Inbound',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Phone Call Inbound',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Phone Call Inbound',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketPhoneInbound',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketPhoneInbound;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu that allows merging tickets in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###430-Merge',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Merge',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Merge into a different ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketMerge',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketMerge;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to set a ticket as pending in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###440-Pending',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Pending',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Set this ticket to pending',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketPending',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketPending;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu for subscribing / unsubscribing from a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###448-Watch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuTicketWatcher',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AgentTicketWatcher',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Watch',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to close a ticket in the ticket zoom view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###450-Close',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Close',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Close this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'AgentTicketClose',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Action=AgentTicketClose;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to delete a ticket in the ticket zoom view of the agent interface. Additional access control to show or not show this link can be done by using Key "Group" and Content like "rw:group1;move_into:group2".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###460-Delete',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Delete',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketMove',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Delete this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketMove;TicketID=$Data{"TicketID"};DestQueue=Delete',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link to set a ticket as spam in the ticket zoom view of the agent interface. Additional access control to show or not show this link can be done by using Key "Group" and Content like "rw:group1;move_into:group2".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::MenuModule###470-Spam',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Spam',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketMove',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Mark as Spam!',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketMove;TicketID=$Data{"TicketID"};DestQueue=Delete',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModule'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to lock / unlock a ticket in the ticket overviews of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###100-Lock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuLock',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Lock',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketLock',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to zoom a ticket in the ticket overviews of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###200-Zoom',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Zoom',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketZoom',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Look into a ticket!',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketZoom;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to see the history of a ticket in every ticket overview of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###210-History',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'History',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketHistory',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Show the ticket history',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketHistory;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketHistory',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to set the priority of a ticket in every ticket overview of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###300-Priority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketPriority',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Change the priority for this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketPriority;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to add a note to a ticket in every ticket overview of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###420-Note',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Note',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketNote',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Add a note to this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketNote;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to close a ticket in every ticket overview of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###440-Close',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Close',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketClose',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Close this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketClose;TicketID=$QData{"TicketID"}',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => 'TicketAction',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to move a ticket in every ticket overview of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###445-Move',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuMove',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Move',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketMove',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Change queue!',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to delete a ticket in every ticket overview of the agent interface. Additional access control to show or not show this link can be done by using Key "Group" and Content like "rw:group1;move_into:group2".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###450-Delete',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Delete',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketMove',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Delete this ticket',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketMove;TicketID=$Data{"TicketID"};DestQueue=Delete',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows a link in the menu to set a ticket as spam in every ticket overview of the agent interface. Additional access control to show or not show this link can be done by using Key "Group" and Content like "rw:group1;move_into:group2".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::PreMenuModule###460-Spam',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::TicketMenuGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Spam',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'AgentTicketMove',
                        'Key' => 'Action'
                      },
                      {
                        'Content' => 'Mark as Spam!',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Action=AgentTicketMove;TicketID=$Data{"TicketID"};DestQueue=Delete',
                        'Key' => 'Link'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Target'
                      },
                      {
                        'Content' => '',
                        'Key' => 'PopupType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::MenuModulePre'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Standard available permissions for agents within the application. If more permissions are needed, they can be entered here. Permissions must be defined to be effective. Some other good permissions have also been provided built-in: note, close, pending, customer, freetext, move, compose, responsible, forward, and bounce. Make sure that "rw" is always the last registered permission.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'System::Permission',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'ro'
                      },
                      {
                        'Content' => 'move_into'
                      },
                      {
                        'Content' => 'create'
                      },
                      {
                        'Content' => 'note'
                      },
                      {
                        'Content' => 'owner'
                      },
                      {
                        'Content' => 'priority'
                      },
                      {
                        'Content' => 'rw'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check the owner of a ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Permission###1-OwnerCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Permission::OwnerCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check the agent responsible of a ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Permission###2-ResponsibleCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Permission::ResponsibleCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check if a user is in a special group. Access is granted, if the user is in the specified group and has ro and rw permissions.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Permission###3-GroupCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Permission::GroupCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check the watcher agents of a ticket.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Permission###4-WatcherCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Permission::WatcherCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check the group permissions for the access to customer tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerTicket::Permission###1-GroupCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::CustomerPermission::GroupCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Grants access, if the customer ID of the ticket matches the customer user\'s ID and the customer user has group permissions on the queue the ticket is in.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerTicket::Permission###2-CustomerUserIDCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::CustomerPermission::CustomerUserIDCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check customer permissions.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerTicket::Permission###3-CustomerIDCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::CustomerPermission::CustomerIDCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Required'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Granted'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines how the From field from the emails (sent from answers and email tickets) should look like.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::DefineEmailFrom',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'System Address Display Name',
                        'Key' => 'SystemAddressName'
                      },
                      {
                        'Content' => 'Agent Name + FromSeparator + System Address Display Name',
                        'Key' => 'AgentNameSystemAddressName'
                      },
                      {
                        'Content' => 'Agent Name',
                        'Key' => 'AgentName'
                      }
                    ],
                    'SelectedID' => 'SystemAddressName'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the separator between the agents real name and the given queue email address.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::DefineEmailFromSeparator',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'via',
                    'RegEx' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket pending reminder overview of the agent interface . "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0100-TicketPendingReminder',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Reminder Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All tickets with a reminder set where the reminder date has been reached',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'TicketPendingTimeOlderMinutes=1;StateType=pending reminder;SortBy=PendingTime;OrderBy=Down;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'Locked',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'UntilTime',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket escalation overview of the agent interface . "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0110-TicketEscalation',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Escalated Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All escalated tickets',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'TicketEscalationTimeOlderMinutes=1;SortBy=EscalationTime;OrderBy=Down;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the new tickets overview of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0120-TicketNew',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'New Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All new tickets, these tickets have not been worked on yet',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'StateType=new;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'Age',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket pending reminder overview of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0130-TicketOpen',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Open Tickets / Need to be answered',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All open tickets, these tickets have already been worked on, but need a response',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'StateType=open;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'Age',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket stats of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0250-TicketStats',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketStatsGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '7 Day Stats',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Created'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Closed'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentSmall',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '30',
                        'Key' => 'CacheTTL'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket calendar of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'DashboardBackend###0260-TicketCalendar',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardCalendar',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Upcoming Events',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => 'rw',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => '',
                        'Key' => 'OwnerOnly'
                      },
                      {
                        'Content' => 'ContentSmall',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '6',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '2',
                        'Key' => 'CacheTTL'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the customer user list overview of the agent interface . "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Framework'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0050-CIC-CustomerUserList',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardCustomerUserList',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Customer Users',
                        'Key' => 'Title',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'All customer users of a CustomerID',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket pending reminder overview of the agent interface . "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0100-CIC-TicketPendingReminder',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Reminder Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All tickets with a reminder set where the reminder date has been reached',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'TicketPendingTimeOlderMinutes=1;StateType=pending reminder;SortBy=PendingTime;OrderBy=Down;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'Locked',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'UntilTime',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket escalation overview of the agent interface . "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0110-CIC-TicketEscalation',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Escalated Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All escalated tickets',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'TicketEscalationTimeOlderMinutes=1;SortBy=EscalationTime;OrderBy=Down;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the new tickets overview of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0120-CIC-TicketNew',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'New Tickets',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All new tickets, these tickets have not been worked on yet',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'StateType=new;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'Age',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the ticket pending reminder overview of the agent interface. "Limit" is the number of entries shown by default. "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0130-CIC-TicketOpen',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardTicketGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Open Tickets / Need to be answered',
                        'Key' => 'Title'
                      },
                      {
                        'Content' => 'All open tickets, these tickets have already been worked on, but need a response',
                        'Key' => 'Description'
                      },
                      {
                        'Content' => 'StateType=open;',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'All',
                        'Key' => 'Filter'
                      },
                      {
                        'Content' => 'Age',
                        'Key' => 'Time'
                      },
                      {
                        'Content' => '10',
                        'Key' => 'Limit'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentLarge',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the dashboard backend of the customer id status widget of the agent interface . "Group" is used to restrict the access to the plugin (e. g. Group: admin;group1;group2;). "Default" determines if the plugin is enabled by default or if the user needs to enable it manually. "CacheTTLLocal" is the cache time in minutes for the plugin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentCustomerInformationCenter::Backend###0500-CIC-CustomerIDStatus',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::DashboardCustomerIDStatus',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Company Status',
                        'Key' => 'Title',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Company Status',
                        'Key' => 'Description',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Attributes'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => 'ContentSmall',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Group'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Default'
                      },
                      {
                        'Content' => '0.5',
                        'Key' => 'CacheTTLLocal'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Dashboard'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the NewTicketNotify object in the preferences view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###NewTicketNotify',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Email Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'New ticket notification',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send me a notification if there is a new ticket in "My Queues".',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send new ticket notifications',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'No',
                                'Key' => '0'
                              },
                              {
                                'Content' => 'Yes',
                                'Key' => '1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserSendNewTicketNotification',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '1000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the FollowUpNotify object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###FollowUpNotify',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Email Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket follow up notification',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send me a notification if a customer sends a follow up and I\'m the owner of the ticket or the ticket is unlocked and is in one of my subscribed queues.',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send ticket follow up notifications',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'No',
                                'Key' => '0'
                              },
                              {
                                'Content' => 'Yes',
                                'Key' => '1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserSendFollowUpNotification',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '2000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the LockTimeoutNotify object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###LockTimeoutNotify',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Email Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket lock timeout notification',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send me a notification if a ticket is unlocked by the system.',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send ticket lock timeout notifications',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'No',
                                'Key' => '0'
                              },
                              {
                                'Content' => 'Yes',
                                'Key' => '1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserSendLockTimeoutNotification',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '3000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the MoveNotify object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###MoveNotify',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Email Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket move notification',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send me a notification if a ticket is moved into one of "My Queues".',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send ticket move notifications',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'No',
                                'Key' => '0'
                              },
                              {
                                'Content' => 'Yes',
                                'Key' => '1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserSendMoveNotification',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '4000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the WatcherNotify object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###WatcherNotify',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesTicketWatcher',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Email Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket watch notification',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send me the same notifications for my watched tickets that the ticket owners will get.',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Send ticket watch notifications',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'No',
                                'Key' => '0'
                              },
                              {
                                'Content' => 'Yes',
                                'Key' => '1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserSendWatcherNotification',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '5000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the CustomQueue object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###CustomQueue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesCustomQueue',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'My Queues',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Your queue selection of your favorite queues. You also get notified about those queues via email if enabled.',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'My Queues',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '1000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => 'ro',
                        'Key' => 'Permission'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the RefreshTime object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###RefreshTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Overview Refresh Time',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'If enabled, the different overviews (Dashboard, LockedView, QueueView) will automatically refresh after the specified time.',
                        'Key' => 'Desc',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Refresh Overviews after',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'off',
                                'Key' => '0'
                              },
                              {
                                'Content' => ' 2 minutes',
                                'Key' => '2'
                              },
                              {
                                'Content' => ' 5 minutes',
                                'Key' => '5'
                              },
                              {
                                'Content' => ' 7 minutes',
                                'Key' => '7'
                              },
                              {
                                'Content' => '10 minutes',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15 minutes',
                                'Key' => '15'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserRefreshTime',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '2000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the pages (in which the tickets are shown) of the small ticket overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###TicketOverviewSmallPageShown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket Overview "Small" Limit',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Ticket limit per page for Ticket Overview "Small"',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '10',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15',
                                'Key' => '15'
                              },
                              {
                                'Content' => '20',
                                'Key' => '20'
                              },
                              {
                                'Content' => '25',
                                'Key' => '25'
                              },
                              {
                                'Content' => '30',
                                'Key' => '30'
                              },
                              {
                                'Content' => '35',
                                'Key' => '35'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '25',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserTicketOverviewSmallPageShown',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '8000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the pages (in which the tickets are shown) of the medium ticket overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###TicketOverviewMediumPageShown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket Overview "Medium" Limit',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Ticket limit per page for Ticket Overview "Medium"',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '10',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15',
                                'Key' => '15'
                              },
                              {
                                'Content' => '20',
                                'Key' => '20'
                              },
                              {
                                'Content' => '25',
                                'Key' => '25'
                              },
                              {
                                'Content' => '30',
                                'Key' => '30'
                              },
                              {
                                'Content' => '35',
                                'Key' => '35'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '20',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserTicketOverviewMediumPageShown',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '8100',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the pages (in which the tickets are shown) of the ticket preview overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###TicketOverviewPreviewPageShown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket Overview "Preview" Limit',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Ticket limit per page for Ticket Overview "Preview"',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '10',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15',
                                'Key' => '15'
                              },
                              {
                                'Content' => '20',
                                'Key' => '20'
                              },
                              {
                                'Content' => '25',
                                'Key' => '25'
                              },
                              {
                                'Content' => '30',
                                'Key' => '30'
                              },
                              {
                                'Content' => '35',
                                'Key' => '35'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '15',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserTicketOverviewPreviewPageShown',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '8200',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the CreateNextMask object in the preference view of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PreferencesGroups###CreateNextMask',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Screen after new ticket',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Show this screen after I created a new ticket',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'CreateTicket',
                                'Key' => ''
                              },
                              {
                                'Content' => 'TicketZoom',
                                'Key' => 'AgentTicketZoom'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserCreateNextMask',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '3000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters of the example queue attribute Comment2.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'QueuePreferences###Comment2',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::QueuePreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'Label'
                      },
                      {
                        'Content' => 'Define the queue comment 2.',
                        'Key' => 'Desc'
                      },
                      {
                        'Content' => 'TextArea',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '50',
                        'Key' => 'Cols'
                      },
                      {
                        'Content' => '5',
                        'Key' => 'Rows'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'PrefKey'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Queue::Preferences'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters of the example service attribute Comment2.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'ServicePreferences###Comment2',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::ServicePreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'Label'
                      },
                      {
                        'Content' => 'Define the service comment 2.',
                        'Key' => 'Desc'
                      },
                      {
                        'Content' => 'TextArea',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '50',
                        'Key' => 'Cols'
                      },
                      {
                        'Content' => '5',
                        'Key' => 'Rows'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'PrefKey'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Service::Preferences'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters of the example SLA attribute Comment2.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'SLAPreferences###Comment2',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::SLAPreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'Label'
                      },
                      {
                        'Content' => 'Define the sla comment 2.',
                        'Key' => 'Desc'
                      },
                      {
                        'Content' => 'TextArea',
                        'Key' => 'Block'
                      },
                      {
                        'Content' => '50',
                        'Key' => 'Cols'
                      },
                      {
                        'Content' => '5',
                        'Key' => 'Rows'
                      },
                      {
                        'Content' => 'Comment2',
                        'Key' => 'PrefKey'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::SLA::Preferences'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sends customer notifications just to the mapped customer. Normally, if no customer is mapped, the latest customer sender gets the notification.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerNotifyJustToRealCustomer',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies if an agent should receive email notification of his own actions.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'AgentSelfNotifyOnAction',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Ticket'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the next screen after new customer ticket in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###NextScreenAfterNewTicket',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'CustomerTicketOverview',
                        'Key' => 'CustomerTicketOverview'
                      },
                      {
                        'Content' => 'CustomerTicketZoom',
                        'Key' => 'CustomerTicketZoom'
                      }
                    ],
                    'SelectedID' => 'CustomerTicketOverview'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to set the ticket priority in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###Priority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default priority of new customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###PriorityDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to set the ticket queue in the customer interface. If this is set to \'No\', QueueDefault should be configured.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###Queue',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default queue for new customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###QueueDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Postmaster',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::QueueValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to set the ticket type in the customer interface. If this is set to \'No\', TicketTypeDefault should be configured.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###TicketType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket type for new customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###TicketTypeDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'default',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to set the ticket service in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###Service',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to set the ticket SLA in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###SLA',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default state of new customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###StateDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'new',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type for article in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'webrequest',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sender type for new tickets from the customer inteface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'customer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default history type in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'WebRequestCustomer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Comment for new history entries in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the receipent target of the tickets ("Queue" shows all queues, "SystemAddress" displays all system addresses) in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPanelSelectionType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'SystemAddress',
                        'Key' => 'SystemAddress'
                      }
                    ],
                    'SelectedID' => 'Queue'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the strings that will be shown as receipent (To:) of the ticket in the customer interface. For Queue as CustomerPanelSelectionType, "<Queue>" shows the names of the queues, and for SystemAddress, "<Realname> <<Email>>" shows the name and email of the receipent.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPanelSelectionString',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '<Queue>',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines which queues will be valid for ticket\'s recepients in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPanelOwnSelection',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'First Queue',
                        'Key' => 'Junk'
                      },
                      {
                        'Content' => 'Second Queue',
                        'Key' => 'Misc'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module for To-selection in new ticket screen in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPanel::NewTicketQueueSelectionModule',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::Output::HTML::CustomerNewTicketQueueSelectionGeneric',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the next screen after the follow up screen of a zoomed ticket in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###NextScreenAfterFollowUp',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'CustomerTicketOverview',
                        'Key' => 'CustomerTicketOverview'
                      },
                      {
                        'Content' => 'CustomerTicketZoom',
                        'Key' => 'CustomerTicketZoom'
                      }
                    ],
                    'SelectedID' => 'CustomerTicketOverview'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default type of the note in the ticket zoom screen of the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###ArticleType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'webrequest',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default sender type for tickets in the ticket zoom screen of the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###SenderType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'customer',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history type for the ticket zoom action, which gets used for ticket history in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###HistoryType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'FollowUp',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the history comment for the ticket zoom action, which gets used for ticket history in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###HistoryComment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows customers to change the ticket priority in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###Priority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default priority of follow up customer tickets in the ticket zoom screen in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###PriorityDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows choosing the next compose state for customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###State',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default next state for a ticket after customer follow up in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###StateDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the next possible states for customer tickets in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###StateType',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'open'
                      },
                      {
                        'Content' => 'closed'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Shows the activated ticket attributes in the customer interface (0 = Disabled and 1 = Enabled).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###AttributesView',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '1',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Type'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'State'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Service'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'SLA'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Owner'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Responsible'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Maximum number of tickets to be displayed in the result of a search in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomerTicketSearch::SearchLimit',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '5000',
                    'Regex' => '^[0-9]{1,8}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Number of tickets to be displayed in each page of a search result in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomerTicketSearch::SearchPageShown',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '40',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket attribute for ticket sorting in a ticket search of the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomerTicketSearch::SortBy::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Age',
                        'Key' => 'Age'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Ticket'
                      },
                      {
                        'Content' => 'Subject',
                        'Key' => 'Subject'
                      },
                      {
                        'Content' => 'Queue',
                        'Key' => 'Queue'
                      },
                      {
                        'Content' => 'Priority',
                        'Key' => 'Priority'
                      },
                      {
                        'Content' => 'EscalationTime',
                        'Key' => 'EscalationTime'
                      }
                    ],
                    'SelectedID' => 'Age'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default ticket order of a search result in the customer interface. Up: oldest on top. Down: latest on top.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::CustomerTicketSearch::Order::Default',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Down',
                        'Key' => 'Down'
                      },
                      {
                        'Content' => 'Up',
                        'Key' => 'Up'
                      }
                    ],
                    'SelectedID' => 'Down'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Allows extended search conditions in ticket search of the customer interface. With this feature you can search w. g. with this kind of conditions like "(key1&&key2)" or "(key1||key2)".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###ExtendedSearchCondition',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Exports the whole article tree in search result (it can affect the system performance).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###SearchArticleCSVTree',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Data used to export the search result in CSV format.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###SearchCSVData',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'TicketNumber'
                      },
                      {
                        'Content' => 'Age'
                      },
                      {
                        'Content' => 'Created'
                      },
                      {
                        'Content' => 'Closed'
                      },
                      {
                        'Content' => 'State'
                      },
                      {
                        'Content' => 'Priority'
                      },
                      {
                        'Content' => 'Lock'
                      },
                      {
                        'Content' => 'CustomerID'
                      },
                      {
                        'Content' => 'CustomerName'
                      },
                      {
                        'Content' => 'From'
                      },
                      {
                        'Content' => 'Subject'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines all the parameters for the ShownTickets object in the customer preferences of the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPreferencesGroups###ShownTickets',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'User Profile',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Number of displayed tickets',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Tickets per page',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '15',
                                'Key' => '15'
                              },
                              {
                                'Content' => '20',
                                'Key' => '20'
                              },
                              {
                                'Content' => '25',
                                'Key' => '25'
                              },
                              {
                                'Content' => '30',
                                'Key' => '30'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '25',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'UserShowTickets',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '4000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines all the parameters for the RefreshTime object in the customer preferences of the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerPreferencesGroups###RefreshTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'User Profile',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Ticket overview',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Refresh interval',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'off',
                                'Key' => ''
                              },
                              {
                                'Content' => ' 2 minutes',
                                'Key' => '2'
                              },
                              {
                                'Content' => ' 5 minutes',
                                'Key' => '5'
                              },
                              {
                                'Content' => ' 7 minutes',
                                'Key' => '7'
                              },
                              {
                                'Content' => '10 minutes',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15 minutes',
                                'Key' => '15'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => 'UserRefreshTime',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => '4000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Path of the file that stores all the settings for the QueueObject object for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CommonObject###QueueObject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::System::Queue',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Path of the file that stores all the settings for the TicketObject for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CommonObject###TicketObject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::System::Ticket',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default used Frontend-Module if no Action parameter given in the url on the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CommonParam###Action',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'AgentDashboard',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default queue ID used by the system in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CommonParam###QueueID',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '0',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default ticket ID used by the system in the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::CommonParam###TicketID',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Path of the file that stores all the settings for the QueueObject object for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::CommonObject###QueueObject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::System::Queue',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Path of the file that stores all the settings for the TicketObject for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::CommonObject###TicketObject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Kernel::System::Ticket',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default used Frontend-Module if no Action parameter given in the url on the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::CommonParam###Action',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'CustomerTicketOverview',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default ticket ID used by the system in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::CommonParam###TicketID',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to generate html OpenSearch profile for short ticket search in the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::HeaderMetaModule###2-TicketSearch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::CustomerHeaderMetaTicketSearch',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'CustomerTicketSearch',
                        'Key' => 'Action'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleMetaHead'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketQueue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Overview of all open Tickets'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.AgentTicketQueue.css'
                          }
                        ],
                        'Content' => '
                    '
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'o'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Overview of all open Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketQueue'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Queue view',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '100'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      },
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 't'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => 'ItemArea'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => '',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketQueue'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '200'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Menu'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'QueueView'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPhone',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Create new phone ticket'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.CustomerSearch.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'n'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create new phone ticket (inbound)',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketPhone'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'New phone ticket',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '200'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'New phone ticket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPhoneOutbound',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Phone Call'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Phone-Ticket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPhoneInbound',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Incoming Phone Call'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Phone-Ticket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketEmail',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Create new email ticket'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.CustomerSearch.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'm'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create new email ticket and send this out (outbound)',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketEmail'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'New email ticket',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '210'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'New email ticket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketSearch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Search Ticket'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 's'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Search Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketSearch'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => 'onclick="window.setTimeout(function(){Core.Agent.Search.OpenSearchDialog(\'AgentTicketSearch\');}, 0); return false;"'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Search',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '300'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Search'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketLockedView',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Locked Tickets'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Locked Tickets'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketResponsibleView',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Responsible Tickets'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Responsible Tickets'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketWatchView',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Watched Tickets'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Watched Tickets'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentCustomerSearch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'AgentCustomerSearch'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'AgentCustomerSearch'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketStatusView',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Overview of all open tickets'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'v'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Overview of all open Tickets.',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketStatusView'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Status view',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '110'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Status view'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketEscalationView',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Overview of all escalated tickets'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'e'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Overview Escalated Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=AgentTicketEscalationView'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Escalation view',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '120'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Escalation view'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentZoom',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'compat module for AgentZoom to AgentTicketZoom'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => ''
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketZoom',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Zoom'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketProcess.css'
                          }
                        ],
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'thirdparty/jquery-tablesorter-2.0.5/jquery.tablesorter.js'
                          },
                          {
                            'Content' => 'Core.UI.Table.Sort.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketZoom.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Zoom'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketAttachment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'To download attachments'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => ''
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPlain',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket plain view of an email'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Plain'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketNote',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Note'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Note'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketMerge',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Merge'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Merge'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPending',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Pending'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Pending'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketWatcher',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'A TicketWatcher Module'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket-Watcher'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Ticket-Watcher'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPriority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Priority'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Priority'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketLock',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Lock'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Lock'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketMove',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Move'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Move'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines the next screen after the ticket is moved. LastScreenOverview will return to search results, queueview, dashboard or the like, LastScreenView will return to TicketZoom.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###NextScreen',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'LastScreenView',
                        'Key' => 'LastScreenView'
                      },
                      {
                        'Content' => 'LastScreenOverview',
                        'Key' => 'LastScreenOverview'
                      }
                    ],
                    'SelectedID' => 'LastScreenView'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default subject for notes added in the ticket move screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###Subject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '$Text{"Change Queue"}',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sets the default body text for notes added in the ticket move screen of the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###Body',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketHistory',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket History'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'History'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketOwner',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Owner'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Owner'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketResponsible',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Responsible'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Responsible'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketCompose',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Compose email Answer'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.CustomerSearch.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Compose'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketBounce',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Compose Bounce Email'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Bounce'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketForward',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Forward Email'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.CustomerSearch.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Forward'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketCustomer',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Customer'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.CustomerSearch.js'
                          },
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Customer'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketClose',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Close'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Close'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketFreeText',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket FreeText'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Free Fields'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketPrint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket Print'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Print'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AgentTicketBulk',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket bulk module'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.TicketAction.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Bulk-Action'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminQueue',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage queues.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Queues',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '100'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Queues',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminResponse',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage response templates.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Responses',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '200'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Responses'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminQueueResponses',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Link responses to queues.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Responses <-> Queues',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '300'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Responses <-> Queues',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminAutoResponse',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage responses that are automatically sent.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Auto Responses',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '400'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Auto Responses',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminQueueAutoResponse',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Link queues to auto responses.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Auto Responses <-> Queues',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '500'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Auto Responses <-> Queues'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminAttachment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage attachments.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Attachments',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '600'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Attachments',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminResponseAttachment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Link attachments to responses templates.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Attachments <-> Responses',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '700'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Attachments <-> Responses',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminSalutation',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage salutations.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Salutations',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '800'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Salutations',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminSignature',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Queue'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage signatures.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Signatures',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '900'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Signatures',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminSystemAddress',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Email'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Set sender email addresses for this system.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Email Addresses',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '300'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Email Addresses',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminNotification',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Manage notifications that are sent to agents.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Agent Notifications',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '400'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Agent Notifications',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminNotificationEvent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage event based notifications.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Notifications (Event)',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '400'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Notifications (Event)',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminService',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage services.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Services',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '900'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Services',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminSLA',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage Service Level Agreements (SLAs).',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Service Level Agreements',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '1000'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Service Level Agreements',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminType',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage ticket types.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Types',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '700'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Types',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminState',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage ticket states.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'States',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '800'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'States',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminPriority',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage ticket priorities.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Priorities',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '850'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Priorities',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Frontend::Module###AdminGenericAgent',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'System'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Manage periodic tasks.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'GenericAgent',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '300'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'GenericAgent',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketOverview',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Overview of customer tickets'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'm'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=CustomerTicketOverview;Subaction=MyTickets'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '100'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Menu'
                          }
                        ]
                      },
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'm'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'My Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=CustomerTicketOverview;Subaction=MyTickets'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'My Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '110'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Submenu'
                          }
                        ]
                      },
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'c'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Company Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=CustomerTicketOverview;Subaction=CompanyTickets'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Company Tickets',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '120'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Submenu'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Overview'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketMessage',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Create tickets'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 'n'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create new Ticket',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=CustomerTicketMessage'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'New Ticket',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '100'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Submenu'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'New Ticket'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketZoom',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Ticket zoom view'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Customer.TicketZoom.js'
                          },
                          {
                            'Content' => 'Core.UI.Popup.js'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Zoom'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketPrint',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Customer Ticket Print Module'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => ''
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Print'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketAttachment',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'To download attachments'
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => ''
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => ''
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the customer interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'CustomerFrontend::Module###CustomerTicketSearch',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Customer ticket search'
                      }
                    ],
                    'NavBar' => [
                      undef,
                      {
                        'AccessKey' => [
                          undef,
                          {
                            'Content' => 's'
                          }
                        ],
                        'Block' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Search',
                            'Translatable' => '1'
                          }
                        ],
                        'Link' => [
                          undef,
                          {
                            'Content' => 'Action=CustomerTicketSearch'
                          }
                        ],
                        'LinkOption' => [
                          undef,
                          {
                            'Content' => ''
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Search',
                            'Translatable' => '1'
                          }
                        ],
                        'NavBar' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '300'
                          }
                        ],
                        'Type' => [
                          undef,
                          {
                            'Content' => 'Submenu'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Ticket'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Search'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'ACL module that allows closing parent tickets only if all its children are already closed ("State" shows which states are not available for the parent ticket until all child tickets are closed).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Acl::Module###1-Ticket::Acl::Module',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Acl::CloseParentAfterClosedChilds',
                        'Key' => 'Module'
                      },
                      {
                        'Array' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'closed successful'
                              },
                              {
                                'Content' => 'closed unsuccessful'
                              }
                            ]
                          }
                        ],
                        'Content' => '
                    ',
                        'Key' => 'State'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketACL'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default ACL values for ticket actions.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'TicketACL::Default::Action',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketACL'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Maximal auto email responses to own email-address a day (Loop-Protection).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterMaxEmails',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '40',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Maximal size in KBytes for mails that can be fetched via POP3/POP3S/IMAP/IMAPS (KBytes).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMasterMaxEmailSize',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '16384',
                    'Regex' => '^[0-9]{1,6}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'The "bin/PostMasterMailAccount.pl" will reconnect to POP3/POP3S/IMAP/IMAPS host after the specified count of messages.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMasterReconnectMessage',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '20',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Default loop protection module.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'LoopProtectionModule',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '',
                    'Location' => 'Kernel/System/PostMaster/LoopProtection/*.pm',
                    'SelectedID' => 'Kernel::System::PostMaster::LoopProtection::DB'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'ConfigLevel' => '200',
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Path for the log file (it only applies if "FS" was selected for LoopProtectionModule and it is mandatory).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'LoopProtectionLog',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '<OTRS_CONFIG_Home>/var/log/LoopProtection',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Converts HTML mails into text messages.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterAutoHTML2Text',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Executes follow up checks on In-Reply-To or References headers for mails that don\'t have a ticket number in the subject.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpSearchInReferences',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Executes follow up mail body checks in mails that don\'t have a ticket number in the subject.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpSearchInBody',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Executes follow up mail attachments checks in  mails that don\'t have a ticket number in the subject.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpSearchInAttachment',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Executes follow up plain/raw mail checks in mails that don\'t have a ticket number in the subject.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpSearchInRaw',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Specifies user id of the postmaster data base.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterUserID',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '1',
                    'Regex' => '^[0-9]{1,3}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the postmaster default queue.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterDefaultQueue',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Raw',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::QueueValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default priority of new tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterDefaultPriority',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '3 normal',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::PriorityValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default state of new tickets.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterDefaultState',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'new',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the state of a ticket if it gets a follow-up.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpState',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the state of a ticket if it gets a follow-up and the ticket was already closed.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpStateClosed',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'open',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0',
            'ValidateModule' => [
              undef,
              {
                'Content' => 'Kernel::System::SysConfig::StateValidate'
              }
            ]
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Sends agent follow-up notification only to the owner, if a ticket is unlocked (the default is to send the notification to all agents).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterFollowUpOnUnlockAgentNotifyOnlyToOwner',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'No',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Yes',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '0'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines all the X-headers that should be scanned.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostmasterX-Header',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Array' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'From'
                      },
                      {
                        'Content' => 'To'
                      },
                      {
                        'Content' => 'Cc'
                      },
                      {
                        'Content' => 'Reply-To'
                      },
                      {
                        'Content' => 'ReplyTo'
                      },
                      {
                        'Content' => 'Subject'
                      },
                      {
                        'Content' => 'Message-ID'
                      },
                      {
                        'Content' => 'Message-Id'
                      },
                      {
                        'Content' => 'Resent-To'
                      },
                      {
                        'Content' => 'Resent-From'
                      },
                      {
                        'Content' => 'Precedence'
                      },
                      {
                        'Content' => 'Mailing-List'
                      },
                      {
                        'Content' => 'List-Id'
                      },
                      {
                        'Content' => 'List-Archive'
                      },
                      {
                        'Content' => 'Errors-To'
                      },
                      {
                        'Content' => 'References'
                      },
                      {
                        'Content' => 'In-Reply-To'
                      },
                      {
                        'Content' => 'X-Loop'
                      },
                      {
                        'Content' => 'X-Spam-Flag'
                      },
                      {
                        'Content' => 'X-Spam-Level'
                      },
                      {
                        'Content' => 'X-Spam-Score'
                      },
                      {
                        'Content' => 'X-Spam-Status'
                      },
                      {
                        'Content' => 'X-No-Loop'
                      },
                      {
                        'Content' => 'X-Priority'
                      },
                      {
                        'Content' => 'Importance'
                      },
                      {
                        'Content' => 'X-Mailer'
                      },
                      {
                        'Content' => 'User-Agent'
                      },
                      {
                        'Content' => 'Organization'
                      },
                      {
                        'Content' => 'X-Original-To'
                      },
                      {
                        'Content' => 'Delivered-To'
                      },
                      {
                        'Content' => 'Envelope-To'
                      },
                      {
                        'Content' => 'Return-Path'
                      },
                      {
                        'Content' => 'X-OTRS-Loop'
                      },
                      {
                        'Content' => 'X-OTRS-Priority'
                      },
                      {
                        'Content' => 'X-OTRS-Queue'
                      },
                      {
                        'Content' => 'X-OTRS-Lock'
                      },
                      {
                        'Content' => 'X-OTRS-Ignore'
                      },
                      {
                        'Content' => 'X-OTRS-State'
                      },
                      {
                        'Content' => 'X-OTRS-State-PendingTime'
                      },
                      {
                        'Content' => 'X-OTRS-Type'
                      },
                      {
                        'Content' => 'X-OTRS-Service'
                      },
                      {
                        'Content' => 'X-OTRS-SLA'
                      },
                      {
                        'Content' => 'X-OTRS-CustomerNo'
                      },
                      {
                        'Content' => 'X-OTRS-CustomerUser'
                      },
                      {
                        'Content' => 'X-OTRS-SenderType'
                      },
                      {
                        'Content' => 'X-OTRS-ArticleType'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-Priority'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-Queue'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-Lock'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-State'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-State-PendingTime'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-Type'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-Service'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-SLA'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-SenderType'
                      },
                      {
                        'Content' => 'X-OTRS-FollowUp-ArticleType'
                      }
                    ]
                  }
                ],
                'Content' => '
            '
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to filter and manipulate incoming messages. Block/ignore all spam email with From: noreply@ address.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###1-Match',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::Match',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'StopAfterMatch'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'noreply@',
                                'Key' => 'From'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Match'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'yes',
                                'Key' => 'X-OTRS-Ignore'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to filter and manipulate incoming messages. Get a 4 digit number to ticket free text, use regex in Match e. g. From => \'(.+?)@.+?\', and use () as [***] in Set =>.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###2-Match',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::Match',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'StopAfterMatch'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'SomeNumber:(\\d\\d\\d\\d)',
                                'Key' => 'Subject'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Match'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'SomeNumber',
                                'Key' => 'X-OTRS-DynamicField-TicketFreeKey1'
                              },
                              {
                                'Content' => '[***]',
                                'Key' => 'X-OTRS-DynamicField-TicketFreeText1'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Blocks all the incoming emails that do not have a valid ticket number in subject with From: @example.com address.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###3-NewTicketReject',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::NewTicketReject',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'StopAfterMatch'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '@example.com',
                                'Key' => 'From'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Match'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'yes',
                                'Key' => 'X-OTRS-Ignore'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the sender for rejected emails.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule::NewTicketReject::Sender',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'noreply@example.com',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the subject for rejected emails.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule::NewTicketReject::Subject',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => 'Email Rejected',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the body text for rejected emails.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule::NewTicketReject::Body',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'TextArea' => [
                  undef,
                  {
                    'Content' => '
Dear Customer,

Unfortunately we could not detect a valid ticket number
in your subject, so this email can\'t be processed.

Please create a new ticket via the customer panel.

Thanks for your help!

 Your Helpdesk Team
'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'CMD example setup. Ignores emails where external CMD returns some output on STDOUT (email will be piped into STDIN of some.bin).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###4-CMD',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::CMD',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '/usr/bin/some.bin',
                        'Key' => 'CMD'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'yes',
                                'Key' => 'X-OTRS-Ignore'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Spam Assassin example setup. Ignores emails that are marked with SpamAssassin.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###5-SpamAssassin',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::CMD',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
                        'Key' => 'CMD'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'yes',
                                'Key' => 'X-OTRS-Ignore'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Spam Assassin example setup. Moves marked mails to spam queue.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###6-SpamAssassin',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::CMD',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
                        'Key' => 'CMD'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => 'spam',
                                'Key' => 'X-OTRS-Queue'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Set'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to use database filter storage.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PreFilterModule###000-MatchDBSource',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::MatchDBSource',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to check if arrived emails should be marked as email-internal (because of original forwared internal email it college). ArticleType and SenderType define the values for the arrived email/article.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'PostMaster::PostFilterModule###000-FollowUpArticleTypeCheck',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::PostMaster::Filter::FollowUpArticleTypeCheck',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'email-internal',
                        'Key' => 'ArticleType'
                      },
                      {
                        'Content' => 'customer',
                        'Key' => 'SenderType'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'If this regex matches, no message will be send by the autoresponder.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'SendNoAutoResponseRegExp',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '(MAILER-DAEMON|postmaster|abuse)@.+?\\..+?',
                    'Regex' => ''
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::PostMaster'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Links 2 tickets with a "Normal" type link.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'LinkObject::PossibleLink###0200',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Object1'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Object2'
                      },
                      {
                        'Content' => 'Normal',
                        'Key' => 'Type'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::LinkObject'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Links 2 tickets with a "ParentChild" type link.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'LinkObject::PossibleLink###0201',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Object1'
                      },
                      {
                        'Content' => 'Ticket',
                        'Key' => 'Object2'
                      },
                      {
                        'Content' => 'ParentChild',
                        'Key' => 'Type'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::LinkObject'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to generate ticket statistics.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Stats::DynamicObjectRegistration###Ticket',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Stats::Dynamic::Ticket',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Stats'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Determines if the statistics module may generate ticket lists.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Stats::DynamicObjectRegistration###TicketList',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Stats::Dynamic::TicketList',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Stats'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to generate accounted time ticket statistics.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Stats::DynamicObjectRegistration###TicketAccountedTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Stats::Dynamic::TicketAccountedTime',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Stats'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Module to generate ticket solution and response time statistics.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Stats::DynamicObjectRegistration###TicketSolutionResponseTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Stats::Dynamic::TicketSolutionResponseTime',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::Stats'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Set the default height (in pixels) of inline HTML articles in AgentTicketZoom.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::HTMLArticleHeightDefault',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^[0-9]{1,4}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Set the maximum height (in pixels) of inline HTML articles in AgentTicketZoom.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::HTMLArticleHeightMax',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '2500',
                    'Regex' => '^[0-9]{1,5}$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Show article as rich text even if rich text writing is disabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::ZoomRichTextForce',
            'Required' => '1',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Option' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Based on global RichText setting',
                        'Key' => '0'
                      },
                      {
                        'Content' => 'Always show RichText if available',
                        'Key' => '1'
                      }
                    ],
                    'SelectedID' => '1'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.css'
                          }
                        ],
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          }
                        ]
                      }
                    ],
                    'NavBarModule' => [
                      undef,
                      {
                        'Block' => [
                          undef,
                          {
                            'Content' => 'Ticket'
                          }
                        ],
                        'Content' => '
                    ',
                        'Description' => [
                          undef,
                          {
                            'Content' => 'Create and manage dynamic fields.',
                            'Translatable' => '1'
                          }
                        ],
                        'Module' => [
                          undef,
                          {
                            'Content' => 'Kernel::Output::HTML::NavBarModuleAdmin'
                          }
                        ],
                        'Name' => [
                          undef,
                          {
                            'Content' => 'Dynamic Fields',
                            'Translatable' => '1'
                          }
                        ],
                        'Prio' => [
                          undef,
                          {
                            'Content' => '1000'
                          }
                        ]
                      }
                    ],
                    'NavBarName' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Parameters for the pages (in which the dynamic fields are shown) of the dynamic fields overview.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'PreferencesGroups###DynamicFieldsOverviewPageShown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::Output::HTML::PreferencesGeneric',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'Other Settings',
                        'Key' => 'Column'
                      },
                      {
                        'Content' => 'Dynamic Fields Overview Limit',
                        'Key' => 'Label',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Dynamic fields limit per page for Dynamic Fields Overview',
                        'Key' => 'Key',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => '
                    ',
                        'Hash' => [
                          undef,
                          {
                            'Content' => '
                        ',
                            'Item' => [
                              undef,
                              {
                                'Content' => '10',
                                'Key' => '10'
                              },
                              {
                                'Content' => '15',
                                'Key' => '15'
                              },
                              {
                                'Content' => '20',
                                'Key' => '20'
                              },
                              {
                                'Content' => '25',
                                'Key' => '25'
                              },
                              {
                                'Content' => '30',
                                'Key' => '30'
                              },
                              {
                                'Content' => '35',
                                'Key' => '35'
                              }
                            ]
                          }
                        ],
                        'Key' => 'Data'
                      },
                      {
                        'Content' => '25',
                        'Key' => 'DataSelected'
                      },
                      {
                        'Content' => 'AdminDynamicFieldsOverviewPageShown',
                        'Key' => 'PrefKey'
                      },
                      {
                        'Content' => '8000',
                        'Key' => 'Prio'
                      },
                      {
                        'Content' => '0',
                        'Key' => 'Active'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Preferences'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicFieldText',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          }
                        ]
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields Text Backend GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicFieldCheckbox',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          }
                        ]
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields Checkbox Backend GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicFieldDropdown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.css'
                          }
                        ],
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          },
                          {
                            'Content' => 'Core.Agent.Admin.DynamicFieldDropdown.js'
                          }
                        ]
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields Drop-down Backend GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicFieldDateTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.css'
                          }
                        ],
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          },
                          {
                            'Content' => 'Core.Agent.Admin.DynamicFieldDateTime.js'
                          }
                        ]
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields Date Time Backend GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Frontend module registration for the agent interface.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'Frontend::Module###AdminDynamicFieldMultiselect',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'FrontendModuleReg' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Description' => [
                      undef,
                      {
                        'Content' => 'Admin'
                      }
                    ],
                    'Group' => [
                      undef,
                      {
                        'Content' => 'admin'
                      }
                    ],
                    'Loader' => [
                      undef,
                      {
                        'CSS' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.css'
                          }
                        ],
                        'Content' => '
                    ',
                        'JavaScript' => [
                          undef,
                          {
                            'Content' => 'Core.Agent.Admin.DynamicField.js'
                          },
                          {
                            'Content' => 'Core.Agent.Admin.DynamicFieldMultiselect.js'
                          }
                        ]
                      }
                    ],
                    'Title' => [
                      undef,
                      {
                        'Content' => 'Dynamic Fields Multiselect Backend GUI',
                        'Translatable' => '1'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Admin::ModuleRegistration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField object registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::ObjectType###Ticket',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Ticket',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::ObjectType::Ticket',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::ObjectType::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField object registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::ObjectType###Article',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Article',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::ObjectType::Article',
                        'Key' => 'Module'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::ObjectType::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###Text',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Text',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::Text',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldText',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###TextArea',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Textarea',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::TextArea',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldText',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###Checkbox',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Checkbox',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::Checkbox',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldCheckbox',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###Dropdown',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Dropdown',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::Dropdown',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldDropdown',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###DateTime',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Date / Time',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::DateTime',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldDateTime',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###Date',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Date',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::Date',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldDateTime',
                        'Key' => 'ConfigDialog'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'DynamicField backend registration.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'DynamicFields'
              }
            ],
            'Name' => 'DynamicFields::Backend###Multiselect',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Multiselect',
                        'Key' => 'DisplayName',
                        'Translatable' => '1'
                      },
                      {
                        'Content' => 'Kernel::System::DynamicField::Backend::Multiselect',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => 'AdminDynamicFieldMultiselect',
                        'Key' => 'ConfigDialog'
                      },
                      {
                        'Content' => ', ',
                        'Key' => 'ItemSeparator'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'DynamicFields::Backend::Registration'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket close screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket compose screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketCompose###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewCompose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket email screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket free text screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket forward screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket move screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMove###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMove'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket note screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket owner screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket pending screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket phone screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket phone inbound screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket phone outbound screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket priority screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket responsible screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields options shown in the ticket message screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required. NOTE. If you want to display these fields also in the ticket zoom of the customer interface, you have to enable them in CustomerTicketZoom###DynamicField.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketMessage###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket small format overview screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::OverviewSmall###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket medium format overview screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::OverviewMedium###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket preview format overview screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::OverviewPreview###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::TicketOverview'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the sidebar of the ticket zoom screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketZoom###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket zoom screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields options shown in the ticket reply section in the ticket zoom screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and required.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketZoom###FollowUpDynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewZoom'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket print screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPrint###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPrint'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket print screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketPrint###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewPrint'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket search screen of the agent interface. Possible settings: 0 = Disabled, 1 = Enabled, 2 = Enabled and shown by default.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the default shown ticket search attribute for ticket search screen. Example: a text, 1, Search_DynamicField_Field1StartYear=2002; Search_DynamicField_Field1StartMonth=12; Search_DynamicField_Field1StartDay=12; Search_DynamicField_Field1StartHour=00; Search_DynamicField_Field1StartMinute=00; Search_DynamicField_Field1StartSecond=00; Search_DynamicField_Field1StopYear=2009; Search_DynamicField_Field1StopMonth=02; Search_DynamicField_Field1StopDay=10; Search_DynamicField_Field1StopHour=23; Search_DynamicField_Field1StopMinute=59; Search_DynamicField_Field1StopSecond=59;.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###Defaults###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic Fields used to export the search result in CSV format.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketSearch###SearchCSVDynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket search screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###DynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic fields shown in the ticket search overview results screen of the customer interface. Possible settings: 0 = Disabled, 1 = Enabled.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###SearchOverviewDynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Dynamic Fields used to export the search result in CSV format.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::CustomerTicketSearch###SearchCSVDynamicField',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
            '
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Customer::Ticket::ViewSearch'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Event module registration. For more performance you can define a trigger event (e. g. Event => TicketCreate). This is only possible if all Ticket dynamic fields need the same event.',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::EventModulePost###TicketDynamicFieldDefault',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Kernel::System::Ticket::Event::TicketDynamicFieldDefault',
                        'Key' => 'Module'
                      },
                      {
                        'Content' => '1',
                        'Key' => 'Transaction'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element1',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => 'Field1',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => 'Default',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => 'TicketCreate',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element2',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element3',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element4',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element5',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element6',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element7',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element8',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element9',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element10',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element11',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element12',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element13',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element14',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element15',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Configures a default TicketDynmicField setting. "Name" defines the dynamic field which should be used, "Value" is the data that will be set, and "Event" defines the trigger event. Please check the developer manual (http://doc.otrs.org/), chapter "Ticket Event Module".',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::TicketDynamicFieldDefault###Element16',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'Hash' => [
                  undef,
                  {
                    'Content' => '
                ',
                    'Item' => [
                      undef,
                      {
                        'Content' => '',
                        'Key' => 'Name'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Value'
                      },
                      {
                        'Content' => '',
                        'Key' => 'Event'
                      }
                    ]
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Core::TicketDynamicFieldDefault'
              }
            ],
            'Valid' => '0'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketNote###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewNote'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketOwner###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewOwner'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPending###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPending'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketEmail###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '320',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewEmailNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhone###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '320',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneNew'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneInbound###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '320',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneInbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPhoneOutbound###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '320',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPhoneOutbound'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketClose###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewClose'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketFreeText###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewFreeText'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketPriority###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewPriority'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketResponsible###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewResponsible'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketForward###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewForward'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the width for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMerge###RichTextWidth',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '620',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          },
          {
            'Content' => '
        ',
            'Description' => [
              undef,
              {
                'Content' => 'Defines the height for the rich text editor component for this screen. Enter number (pixels) or percent value (relative).',
                'Translatable' => '1'
              }
            ],
            'Group' => [
              undef,
              {
                'Content' => 'Ticket'
              }
            ],
            'Name' => 'Ticket::Frontend::AgentTicketMerge###RichTextHeight',
            'Required' => '0',
            'Setting' => [
              undef,
              {
                'Content' => '
            ',
                'String' => [
                  undef,
                  {
                    'Content' => '100',
                    'Regex' => '^\\d+%?$'
                  }
                ]
              }
            ],
            'SubGroup' => [
              undef,
              {
                'Content' => 'Frontend::Agent::Ticket::ViewMerge'
              }
            ],
            'Valid' => '1'
          }
        ],
        'Content' => '
    ',
        'init' => 'Application',
        'version' => '1.0'
      }
    ]
  }
];

1;